cpu:
  api_field: cluster.capacityConfig.vcpuCount
  arg_name: cpu
  help_text: |
    The number of vCPUs to provision for the cluster. Minimum is 3.

memory:
  api_field: cluster.capacityConfig.memoryBytes
  arg_name: memory
  type: googlecloudsdk.core.util.scaled_integer:ParseInteger
  help_text: |
    The memory to provision for the cluster in bytes. Must be between 1 GiB and 6 GiB per vCPU.
    Ex. 1024Mi, 4Gi.

subnets:
  arg_name: subnets
  type: "googlecloudsdk.calliope.arg_parsers:ArgList:"
  help_text: |
    VPC subnets from which the cluster will be accessible. Both broker and boostrap server
    IP addresses and DNS entries will be automatically created in each subnet.
    Name of the subnet must be in the format
    projects/``PROJECT_ID''/regions/``REGION''/subnetworks/subnet. The subnet must be
    located in the same region as the cluster. The project may differ. Minimum of 1 subnet is
    required. Maximum 10 subnets can be specified. Use comma separation to specify multiple subnets.
    The bootstrap address is structured as
    bootstrap.``CLUSTER_ID''.``REGION''.managedkafka.``PROJECT_ID''.cloud.goog:9092.

labels:
  api_field: cluster.labels
  arg_name: labels
  metavar: KEY=VALUE
  type: "googlecloudsdk.calliope.arg_parsers:ArgDict:"
  help_text: |
    List of label KEY=VALUE pairs to add.
    Keys must start with a lowercase character and contain only hyphens (-),
    underscores (_), lowercase characters, and numbers. Values must contain only
    hyphens (-), underscores (_), lowercase characters, and numbers.

encryption-key:
  api_field: cluster.gcpConfig.kmsKey
  arg_name: encryption-key
  help_text: |
    The relative resource path of the Cloud KMS key to use for encryption in the form:
    projects/``PROJECT_ID''/locations/``LOCATION''/keyRings/``KEY_RING''/cryptoKeys/``KEY''.
    The key must be located in the same region as the cluster. The key cannot be changed once set.

partitions:
  api_field: topic.partitionCount
  arg_name: partitions
  help_text: |
    The number of partitions in a topic. You can increase the partition count for a topic, but you
    cannot decrease it. Be aware that increasing partitions for a topic that uses a key might
    change how messages are distributed.

replication-factor:
  api_field: topic.replicationFactor
  arg_name: replication-factor
  help_text: |
    The number of replicas of each partition. If not specified during creation,
    the cluster's default replication factor (3) is used.

configs:
  api_field: topic.configs
  arg_name: configs
  metavar: KEY=VALUE
  type: "googlecloudsdk.calliope.arg_parsers:ArgDict:"
  help_text: |
    Configurations for the topic that are overridden from the cluster defaults.
    The key of the map is a Kafka topic property name, for example:
    `cleanup.policy=compact`, `compression.type=producer`.
